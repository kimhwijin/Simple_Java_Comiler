class id lbrace vtype id assign num semi vtype id assign num semi vtype id lparen vtype id comma vtype id rparen lbrace if lparen boolstr comp boolstr rparen lbrace id assign num semi id assign num semi rbrace return id multdiv id semi rbrace rbrace vtype id assign num semi $
---------------steps :0---------------
stack : 0
tokens : [('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'i'), ('assign', '='), ('num', '0'), ('semi', ';')]
## state :0| token :class| action :s6
---------------steps :1---------------
stack : 0, 'class', 6
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'i'), ('assign', '='), ('num', '0'), ('semi', ';')]
## state :6| token :id| action :s12
---------------steps :2---------------
stack : 0, 'class', 6, 'id', 12
tokens : [('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'i'), ('assign', '='), ('num', '0'), ('semi', ';')]
## state :12| token :lbrace| action :None
