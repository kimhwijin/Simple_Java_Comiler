vtype id assign num semi vtype id lparen vtype id rparen lbrace vtype id assign num semi id assign id addsub num semi return id semi rbrace vtype id lparen vtype id comma vtype id rparen lbrace vtype id assign num semi id assign id multdiv id semi if lparen boolstr comp boolstr rparen lbrace id assign id addsub id semi rbrace else lbrace id assign id multdiv id semi rbrace return boolstr semi rbrace class id lbrace vtype id assign num semi vtype id assign num semi vtype id lparen vtype id comma vtype id rparen lbrace if lparen boolstr comp boolstr rparen lbrace id assign num semi id assign num semi rbrace return id multdiv id semi rbrace rbrace $
---------------steps :0---------------
stack : 0
tokens : [('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :0| token :vtype| action :s5
---------------steps :1---------------
stack : 0, 'vtype', 5
tokens : [('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :5| token :id| action :s10
---------------steps :2---------------
stack : 0, 'vtype', 5, 'id', 10
tokens : [('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :10| token :assign| action :s15
---------------steps :3---------------
stack : 0, 'vtype', 5, 'id', 10, 'assign', 15
tokens : [('semi', ';'), ('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :num| action :s29
---------------steps :4---------------
stack : 0, 'vtype', 5, 'id', 10, 'assign', 15, 'num', 29
tokens : [('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :29| token :semi| action :r18
---------------steps :5---------------
stack : 0, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRF'
tokens : [('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRF| action :26
---------------steps :6---------------
stack : 0, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRF', 26
tokens : [('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :7---------------
stack : 0, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRT'
tokens : [('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRT| action :25
---------------steps :8---------------
stack : 0, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRT', 25
tokens : [('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :9---------------
stack : 0, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPR'
tokens : [('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPR| action :21
---------------steps :10---------------
stack : 0, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPR', 21
tokens : [('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :11---------------
stack : 0, 'vtype', 5, 'id', 10, 'assign', 15, 'RHS'
tokens : [('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :RHS| action :20
---------------steps :12---------------
stack : 0, 'vtype', 5, 'id', 10, 'assign', 15, 'RHS', 20
tokens : [('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :20| token :semi| action :r7
---------------steps :13---------------
stack : 0, 'vtype', 5, 'ASSIGN'
tokens : [('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :5| token :ASSIGN| action :11
---------------steps :14---------------
stack : 0, 'vtype', 5, 'ASSIGN', 11
tokens : [('vtype', 'int'), ('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :11| token :semi| action :s16
---------------steps :15---------------
stack : 0, 'vtype', 5, 'ASSIGN', 11, 'semi', 16
tokens : [('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :16| token :vtype| action :r6
---------------steps :16---------------
stack : 0, 'VDECL'
tokens : [('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :0| token :VDECL| action :2
---------------steps :17---------------
stack : 0, 'VDECL', 2
tokens : [('id', 'main'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :2| token :vtype| action :s5
---------------steps :18---------------
stack : 0, 'VDECL', 2, 'vtype', 5
tokens : [('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :5| token :id| action :s10
---------------steps :19---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10
tokens : [('vtype', 'int'), ('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :10| token :lparen| action :s14
---------------steps :20---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14
tokens : [('id', 'x'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :14| token :vtype| action :s19
---------------steps :21---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19
tokens : [('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :19| token :id| action :s34
---------------steps :22---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :34| token :rparen| action :r23
---------------steps :23---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'MOREARGS'
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :34| token :MOREARGS| action :42
---------------steps :24---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'MOREARGS', 42
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :42| token :rparen| action :r20
---------------steps :25---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG'
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :14| token :ARG| action :18
---------------steps :26---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :18| token :rparen| action :s33
---------------steps :27---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33
tokens : [('vtype', 'int'), ('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :33| token :lbrace| action :s41
---------------steps :28---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41
tokens : [('id', 'a'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :41| token :vtype| action :s53
---------------steps :29---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53
tokens : [('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :53| token :id| action :s62
---------------steps :30---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62
tokens : [('num', '0'), ('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :62| token :assign| action :s15
---------------steps :31---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15
tokens : [('semi', ';'), ('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :num| action :s29
---------------steps :32---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'num', 29
tokens : [('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :29| token :semi| action :r18
---------------steps :33---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPRF'
tokens : [('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRF| action :26
---------------steps :34---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPRF', 26
tokens : [('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :35---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPRT'
tokens : [('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRT| action :25
---------------steps :36---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPRT', 25
tokens : [('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :37---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPR'
tokens : [('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPR| action :21
---------------steps :38---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPR', 21
tokens : [('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :39---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'RHS'
tokens : [('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :RHS| action :20
---------------steps :40---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'RHS', 20
tokens : [('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :20| token :semi| action :r7
---------------steps :41---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'ASSIGN'
tokens : [('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :53| token :ASSIGN| action :11
---------------steps :42---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'ASSIGN', 11
tokens : [('id', 'a'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :11| token :semi| action :s16
---------------steps :43---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'ASSIGN', 11, 'semi', 16
tokens : [('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :16| token :id| action :r6
---------------steps :44---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'VDECL'
tokens : [('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :41| token :VDECL| action :49
---------------steps :45---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'VDECL', 49
tokens : [('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :49| token :id| action :r26
---------------steps :46---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT'
tokens : [('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :41| token :STMT| action :48
---------------steps :47---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48
tokens : [('assign', '='), ('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :id| action :s54
---------------steps :48---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54
tokens : [('id', 'x'), ('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :54| token :assign| action :s15
---------------steps :49---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15
tokens : [('addsub', '+'), ('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :id| action :s28
---------------steps :50---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'id', 28
tokens : [('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :28| token :addsub| action :r17
---------------steps :51---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF'
tokens : [('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRF| action :26
---------------steps :52---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF', 26
tokens : [('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :addsub| action :r15
---------------steps :53---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT'
tokens : [('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRT| action :25
---------------steps :54---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT', 25
tokens : [('num', '1'), ('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :addsub| action :s35
---------------steps :55---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35
tokens : [('semi', ';'), ('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :35| token :num| action :s29
---------------steps :56---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'num', 29
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :29| token :semi| action :r18
---------------steps :57---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPRF'
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :35| token :EXPRF| action :26
---------------steps :58---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPRF', 26
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :59---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPRT'
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :35| token :EXPRT| action :25
---------------steps :60---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPRT', 25
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :61---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPR'
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :35| token :EXPR| action :44
---------------steps :62---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPR', 44
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :44| token :semi| action :r12
---------------steps :63---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPR'
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPR| action :21
---------------steps :64---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPR', 21
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :65---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'RHS'
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :RHS| action :20
---------------steps :66---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'RHS', 20
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :20| token :semi| action :r7
---------------steps :67---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'ASSIGN'
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :ASSIGN| action :50
---------------steps :68---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'ASSIGN', 50
tokens : [('return', 'return'), ('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :50| token :semi| action :s59
---------------steps :69---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'ASSIGN', 50, 'semi', 59
tokens : [('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :59| token :return| action :r27
---------------steps :70---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT'
tokens : [('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :STMT| action :48
---------------steps :71---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48
tokens : [('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :return| action :r25
---------------steps :72---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'BLOCK'
tokens : [('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :BLOCK| action :58
---------------steps :73---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'BLOCK', 58
tokens : [('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :58| token :return| action :r24
---------------steps :74---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'BLOCK'
tokens : [('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :BLOCK| action :58
---------------steps :75---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'BLOCK', 58
tokens : [('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :58| token :return| action :r24
---------------steps :76---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK'
tokens : [('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :41| token :BLOCK| action :47
---------------steps :77---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47
tokens : [('id', 'a'), ('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :47| token :return| action :s57
---------------steps :78---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57
tokens : [('semi', ';'), ('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :57| token :id| action :s28
---------------steps :79---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'id', 28
tokens : [('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :28| token :semi| action :r17
---------------steps :80---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRF'
tokens : [('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :57| token :EXPRF| action :26
---------------steps :81---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRF', 26
tokens : [('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :82---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRT'
tokens : [('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :57| token :EXPRT| action :25
---------------steps :83---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRT', 25
tokens : [('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :84---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPR'
tokens : [('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :57| token :EXPR| action :21
---------------steps :85---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPR', 21
tokens : [('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :86---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'RHS'
tokens : [('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :57| token :RHS| action :65
---------------steps :87---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'RHS', 65
tokens : [('rbrace', '}'), ('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :65| token :semi| action :s71
---------------steps :88---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'RHS', 65, 'semi', 71
tokens : [('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :71| token :rbrace| action :r35
---------------steps :89---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'RETURN'
tokens : [('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :47| token :RETURN| action :56
---------------steps :90---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'RETURN', 56
tokens : [('vtype', 'int'), ('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :56| token :rbrace| action :s64
---------------steps :91---------------
stack : 0, 'VDECL', 2, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'RETURN', 56, 'rbrace', 64
tokens : [('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :64| token :vtype| action :r19
---------------steps :92---------------
stack : 0, 'VDECL', 2, 'FDECL'
tokens : [('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :2| token :FDECL| action :3
---------------steps :93---------------
stack : 0, 'VDECL', 2, 'FDECL', 3
tokens : [('id', 'main123'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :3| token :vtype| action :s5
---------------steps :94---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5
tokens : [('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :5| token :id| action :s10
---------------steps :95---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10
tokens : [('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :10| token :lparen| action :s14
---------------steps :96---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14
tokens : [('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :14| token :vtype| action :s19
---------------steps :97---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19
tokens : [('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :19| token :id| action :s34
---------------steps :98---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34
tokens : [('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :34| token :comma| action :s43
---------------steps :99---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'comma', 43
tokens : [('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :43| token :vtype| action :s55
---------------steps :100---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'comma', 43, 'vtype', 55
tokens : [('rparen', ')'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :55| token :id| action :s63
---------------steps :101---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'comma', 43, 'vtype', 55, 'id', 63
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :63| token :rparen| action :r23
---------------steps :102---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'comma', 43, 'vtype', 55, 'id', 63, 'MOREARGS'
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :63| token :MOREARGS| action :70
---------------steps :103---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'comma', 43, 'vtype', 55, 'id', 63, 'MOREARGS', 70
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :70| token :rparen| action :r22
---------------steps :104---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'MOREARGS'
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :34| token :MOREARGS| action :42
---------------steps :105---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'MOREARGS', 42
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :42| token :rparen| action :r20
---------------steps :106---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG'
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :14| token :ARG| action :18
---------------steps :107---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :18| token :rparen| action :s33
---------------steps :108---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33
tokens : [('vtype', 'int'), ('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :33| token :lbrace| action :s41
---------------steps :109---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41
tokens : [('id', 'temp'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :41| token :vtype| action :s53
---------------steps :110---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53
tokens : [('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :53| token :id| action :s62
---------------steps :111---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62
tokens : [('num', '0'), ('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :62| token :assign| action :s15
---------------steps :112---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15
tokens : [('semi', ';'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :num| action :s29
---------------steps :113---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'num', 29
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :29| token :semi| action :r18
---------------steps :114---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPRF'
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRF| action :26
---------------steps :115---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPRF', 26
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :116---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPRT'
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRT| action :25
---------------steps :117---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPRT', 25
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :118---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPR'
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPR| action :21
---------------steps :119---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'EXPR', 21
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :120---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'RHS'
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :RHS| action :20
---------------steps :121---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'id', 62, 'assign', 15, 'RHS', 20
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :20| token :semi| action :r7
---------------steps :122---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'ASSIGN'
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :53| token :ASSIGN| action :11
---------------steps :123---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'ASSIGN', 11
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :11| token :semi| action :s16
---------------steps :124---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'vtype', 53, 'ASSIGN', 11, 'semi', 16
tokens : [('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :16| token :id| action :r6
---------------steps :125---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'VDECL'
tokens : [('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :41| token :VDECL| action :49
---------------steps :126---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'VDECL', 49
tokens : [('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :49| token :id| action :r26
---------------steps :127---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT'
tokens : [('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :41| token :STMT| action :48
---------------steps :128---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48
tokens : [('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :id| action :s54
---------------steps :129---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54
tokens : [('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :54| token :assign| action :s15
---------------steps :130---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15
tokens : [('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :id| action :s28
---------------steps :131---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'id', 28
tokens : [('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :28| token :multdiv| action :r17
---------------steps :132---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF'
tokens : [('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRF| action :26
---------------steps :133---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF', 26
tokens : [('id', 'y'), ('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :multdiv| action :s36
---------------steps :134---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36
tokens : [('semi', ';'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :36| token :id| action :s28
---------------steps :135---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36, 'id', 28
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :28| token :semi| action :r17
---------------steps :136---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36, 'EXPRF'
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :36| token :EXPRF| action :26
---------------steps :137---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36, 'EXPRF', 26
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :138---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36, 'EXPRT'
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :36| token :EXPRT| action :45
---------------steps :139---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36, 'EXPRT', 45
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :45| token :semi| action :r14
---------------steps :140---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT'
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRT| action :25
---------------steps :141---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT', 25
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :142---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPR'
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPR| action :21
---------------steps :143---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPR', 21
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :144---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'RHS'
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :RHS| action :20
---------------steps :145---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'id', 54, 'assign', 15, 'RHS', 20
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :20| token :semi| action :r7
---------------steps :146---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'ASSIGN'
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :ASSIGN| action :50
---------------steps :147---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'ASSIGN', 50
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :50| token :semi| action :s59
---------------steps :148---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'ASSIGN', 50, 'semi', 59
tokens : [('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :59| token :if| action :r27
---------------steps :149---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT'
tokens : [('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :STMT| action :48
---------------steps :150---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48
tokens : [('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :if| action :s51
---------------steps :151---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51
tokens : [('boolstr', 'true'), ('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :51| token :lparen| action :s60
---------------steps :152---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60
tokens : [('comp', '=='), ('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :60| token :boolstr| action :s68
---------------steps :153---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'boolstr', 68
tokens : [('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :68| token :comp| action :r32
---------------steps :154---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'CONDL'
tokens : [('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :60| token :CONDL| action :67
---------------steps :155---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'CONDL', 67
tokens : [('boolstr', 'true'), ('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :67| token :comp| action :s73
---------------steps :156---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73
tokens : [('rparen', ')'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :73| token :boolstr| action :s68
---------------steps :157---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73, 'boolstr', 68
tokens : [('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :68| token :rparen| action :r32
---------------steps :158---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73, 'CONDL'
tokens : [('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :73| token :CONDL| action :67
---------------steps :159---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73, 'CONDL', 67
tokens : [('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :67| token :rparen| action :r31
---------------steps :160---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73, 'COND'
tokens : [('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :73| token :COND| action :76
---------------steps :161---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73, 'COND', 76
tokens : [('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :76| token :rparen| action :r30
---------------steps :162---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND'
tokens : [('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :60| token :COND| action :66
---------------steps :163---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66
tokens : [('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :66| token :rparen| action :s72
---------------steps :164---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :72| token :lbrace| action :s75
---------------steps :165---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75
tokens : [('assign', '='), ('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :75| token :id| action :s54
---------------steps :166---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54
tokens : [('id', 'x'), ('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :54| token :assign| action :s15
---------------steps :167---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15
tokens : [('addsub', '+'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :id| action :s28
---------------steps :168---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'id', 28
tokens : [('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :28| token :addsub| action :r17
---------------steps :169---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRF'
tokens : [('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRF| action :26
---------------steps :170---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRF', 26
tokens : [('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :addsub| action :r15
---------------steps :171---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT'
tokens : [('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRT| action :25
---------------steps :172---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT', 25
tokens : [('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :addsub| action :s35
---------------steps :173---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35
tokens : [('semi', ';'), ('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :35| token :id| action :s28
---------------steps :174---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'id', 28
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :28| token :semi| action :r17
---------------steps :175---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPRF'
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :35| token :EXPRF| action :26
---------------steps :176---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPRF', 26
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :177---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPRT'
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :35| token :EXPRT| action :25
---------------steps :178---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPRT', 25
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :179---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPR'
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :35| token :EXPR| action :44
---------------steps :180---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT', 25, 'addsub', 35, 'EXPR', 44
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :44| token :semi| action :r12
---------------steps :181---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPR'
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPR| action :21
---------------steps :182---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPR', 21
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :183---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'RHS'
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :RHS| action :20
---------------steps :184---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'RHS', 20
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :20| token :semi| action :r7
---------------steps :185---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'ASSIGN'
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :75| token :ASSIGN| action :50
---------------steps :186---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'ASSIGN', 50
tokens : [('rbrace', '}'), ('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :50| token :semi| action :s59
---------------steps :187---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'ASSIGN', 50, 'semi', 59
tokens : [('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :59| token :rbrace| action :r27
---------------steps :188---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT'
tokens : [('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :75| token :STMT| action :48
---------------steps :189---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48
tokens : [('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :rbrace| action :r25
---------------steps :190---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'BLOCK'
tokens : [('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :BLOCK| action :58
---------------steps :191---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'BLOCK', 58
tokens : [('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :58| token :rbrace| action :r24
---------------steps :192---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK'
tokens : [('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :75| token :BLOCK| action :78
---------------steps :193---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78
tokens : [('else', 'else'), ('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :78| token :rbrace| action :s80
---------------steps :194---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80
tokens : [('lbrace', '{'), ('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :80| token :else| action :s83
---------------steps :195---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83
tokens : [('id', 'temp'), ('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :83| token :lbrace| action :s85
---------------steps :196---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85
tokens : [('assign', '='), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :85| token :id| action :s54
---------------steps :197---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54
tokens : [('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :54| token :assign| action :s15
---------------steps :198---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15
tokens : [('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :id| action :s28
---------------steps :199---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'id', 28
tokens : [('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :28| token :multdiv| action :r17
---------------steps :200---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPRF'
tokens : [('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRF| action :26
---------------steps :201---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPRF', 26
tokens : [('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :multdiv| action :s36
---------------steps :202---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36
tokens : [('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :36| token :id| action :s28
---------------steps :203---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36, 'id', 28
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :28| token :semi| action :r17
---------------steps :204---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36, 'EXPRF'
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :36| token :EXPRF| action :26
---------------steps :205---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36, 'EXPRF', 26
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :206---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36, 'EXPRT'
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :36| token :EXPRT| action :45
---------------steps :207---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPRF', 26, 'multdiv', 36, 'EXPRT', 45
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :45| token :semi| action :r14
---------------steps :208---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPRT'
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRT| action :25
---------------steps :209---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPRT', 25
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :210---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPR'
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPR| action :21
---------------steps :211---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'EXPR', 21
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :212---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'RHS'
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :RHS| action :20
---------------steps :213---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'id', 54, 'assign', 15, 'RHS', 20
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :20| token :semi| action :r7
---------------steps :214---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'ASSIGN'
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :85| token :ASSIGN| action :50
---------------steps :215---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'ASSIGN', 50
tokens : [('rbrace', '}'), ('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :50| token :semi| action :s59
---------------steps :216---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'ASSIGN', 50, 'semi', 59
tokens : [('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :59| token :rbrace| action :r27
---------------steps :217---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'STMT'
tokens : [('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :85| token :STMT| action :48
---------------steps :218---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'STMT', 48
tokens : [('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :rbrace| action :r25
---------------steps :219---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'STMT', 48, 'BLOCK'
tokens : [('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :BLOCK| action :58
---------------steps :220---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'STMT', 48, 'BLOCK', 58
tokens : [('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :58| token :rbrace| action :r24
---------------steps :221---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'BLOCK'
tokens : [('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :85| token :BLOCK| action :86
---------------steps :222---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'BLOCK', 86
tokens : [('return', 'return'), ('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :86| token :rbrace| action :s87
---------------steps :223---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'else', 83, 'lbrace', 85, 'BLOCK', 86, 'rbrace', 87
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :87| token :return| action :r33
---------------steps :224---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'ELSE'
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :80| token :ELSE| action :82
---------------steps :225---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'ELSE', 82
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :82| token :return| action :r28
---------------steps :226---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'STMT'
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :STMT| action :48
---------------steps :227---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'STMT', 48
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :return| action :r25
---------------steps :228---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'STMT', 48, 'BLOCK'
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :BLOCK| action :58
---------------steps :229---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'STMT', 48, 'BLOCK', 58
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :58| token :return| action :r24
---------------steps :230---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'BLOCK'
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :BLOCK| action :58
---------------steps :231---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'STMT', 48, 'BLOCK', 58
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :58| token :return| action :r24
---------------steps :232---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'BLOCK'
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :BLOCK| action :58
---------------steps :233---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'BLOCK', 58
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :58| token :return| action :r24
---------------steps :234---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK'
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :41| token :BLOCK| action :47
---------------steps :235---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47
tokens : [('boolstr', 'true'), ('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :47| token :return| action :s57
---------------steps :236---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57
tokens : [('semi', ';'), ('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :57| token :boolstr| action :s24
---------------steps :237---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'boolstr', 24
tokens : [('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :24| token :semi| action :r11
---------------steps :238---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'RHS'
tokens : [('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :57| token :RHS| action :65
---------------steps :239---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'RHS', 65
tokens : [('rbrace', '}'), ('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :65| token :semi| action :s71
---------------steps :240---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'RHS', 65, 'semi', 71
tokens : [('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :71| token :rbrace| action :r35
---------------steps :241---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'RETURN'
tokens : [('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :47| token :RETURN| action :56
---------------steps :242---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'RETURN', 56
tokens : [('class', 'class'), ('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :56| token :rbrace| action :s64
---------------steps :243---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'RETURN', 56, 'rbrace', 64
tokens : [('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :64| token :class| action :r19
---------------steps :244---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL'
tokens : [('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :3| token :FDECL| action :3
---------------steps :245---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3
tokens : [('id', 'compiler'), ('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :3| token :class| action :s6
---------------steps :246---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6
tokens : [('lbrace', '{'), ('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :6| token :id| action :s12
---------------steps :247---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12
tokens : [('vtype', 'int'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :12| token :lbrace| action :s17
---------------steps :248---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17
tokens : [('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :17| token :vtype| action :s5
---------------steps :249---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5
tokens : [('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :5| token :id| action :s10
---------------steps :250---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'id', 10
tokens : [('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :10| token :assign| action :s15
---------------steps :251---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'id', 10, 'assign', 15
tokens : [('semi', ';'), ('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :num| action :s29
---------------steps :252---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'id', 10, 'assign', 15, 'num', 29
tokens : [('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :29| token :semi| action :r18
---------------steps :253---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRF'
tokens : [('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRF| action :26
---------------steps :254---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRF', 26
tokens : [('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :255---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRT'
tokens : [('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRT| action :25
---------------steps :256---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRT', 25
tokens : [('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :257---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPR'
tokens : [('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPR| action :21
---------------steps :258---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPR', 21
tokens : [('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :259---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'id', 10, 'assign', 15, 'RHS'
tokens : [('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :RHS| action :20
---------------steps :260---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'id', 10, 'assign', 15, 'RHS', 20
tokens : [('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :20| token :semi| action :r7
---------------steps :261---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'ASSIGN'
tokens : [('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :5| token :ASSIGN| action :11
---------------steps :262---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'ASSIGN', 11
tokens : [('vtype', 'int'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :11| token :semi| action :s16
---------------steps :263---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'vtype', 5, 'ASSIGN', 11, 'semi', 16
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :16| token :vtype| action :r6
---------------steps :264---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL'
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :17| token :VDECL| action :31
---------------steps :265---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :31| token :vtype| action :s5
---------------steps :266---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5
tokens : [('assign', '='), ('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :5| token :id| action :s10
---------------steps :267---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'id', 10
tokens : [('num', '0'), ('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :10| token :assign| action :s15
---------------steps :268---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'id', 10, 'assign', 15
tokens : [('semi', ';'), ('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :num| action :s29
---------------steps :269---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'id', 10, 'assign', 15, 'num', 29
tokens : [('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :29| token :semi| action :r18
---------------steps :270---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRF'
tokens : [('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRF| action :26
---------------steps :271---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRF', 26
tokens : [('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :272---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRT'
tokens : [('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRT| action :25
---------------steps :273---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPRT', 25
tokens : [('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :274---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPR'
tokens : [('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPR| action :21
---------------steps :275---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'id', 10, 'assign', 15, 'EXPR', 21
tokens : [('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :276---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'id', 10, 'assign', 15, 'RHS'
tokens : [('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :RHS| action :20
---------------steps :277---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'id', 10, 'assign', 15, 'RHS', 20
tokens : [('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :20| token :semi| action :r7
---------------steps :278---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'ASSIGN'
tokens : [('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :5| token :ASSIGN| action :11
---------------steps :279---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'ASSIGN', 11
tokens : [('vtype', 'int'), ('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :11| token :semi| action :s16
---------------steps :280---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'vtype', 5, 'ASSIGN', 11, 'semi', 16
tokens : [('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :16| token :vtype| action :r6
---------------steps :281---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL'
tokens : [('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :31| token :VDECL| action :31
---------------steps :282---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31
tokens : [('id', 'multi'), ('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :31| token :vtype| action :s5
---------------steps :283---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5
tokens : [('lparen', '('), ('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :5| token :id| action :s10
---------------steps :284---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10
tokens : [('vtype', 'int'), ('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :10| token :lparen| action :s14
---------------steps :285---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14
tokens : [('id', 'x'), ('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :14| token :vtype| action :s19
---------------steps :286---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19
tokens : [('comma', ','), ('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :19| token :id| action :s34
---------------steps :287---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34
tokens : [('vtype', 'int'), ('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :34| token :comma| action :s43
---------------steps :288---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'comma', 43
tokens : [('id', 'y'), ('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :43| token :vtype| action :s55
---------------steps :289---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'comma', 43, 'vtype', 55
tokens : [('rparen', ')'), ('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :55| token :id| action :s63
---------------steps :290---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'comma', 43, 'vtype', 55, 'id', 63
tokens : [('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :63| token :rparen| action :r23
---------------steps :291---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'comma', 43, 'vtype', 55, 'id', 63, 'MOREARGS'
tokens : [('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :63| token :MOREARGS| action :70
---------------steps :292---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'comma', 43, 'vtype', 55, 'id', 63, 'MOREARGS', 70
tokens : [('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :70| token :rparen| action :r22
---------------steps :293---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'MOREARGS'
tokens : [('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :34| token :MOREARGS| action :42
---------------steps :294---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'vtype', 19, 'id', 34, 'MOREARGS', 42
tokens : [('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :42| token :rparen| action :r20
---------------steps :295---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG'
tokens : [('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :14| token :ARG| action :18
---------------steps :296---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18
tokens : [('lbrace', '{'), ('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :18| token :rparen| action :s33
---------------steps :297---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33
tokens : [('if', 'if'), ('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :33| token :lbrace| action :s41
---------------steps :298---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41
tokens : [('lparen', '('), ('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :41| token :if| action :s51
---------------steps :299---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51
tokens : [('boolstr', 'true'), ('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :51| token :lparen| action :s60
---------------steps :300---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60
tokens : [('comp', '=='), ('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :60| token :boolstr| action :s68
---------------steps :301---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'boolstr', 68
tokens : [('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :68| token :comp| action :r32
---------------steps :302---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'CONDL'
tokens : [('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :60| token :CONDL| action :67
---------------steps :303---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'CONDL', 67
tokens : [('boolstr', 'false'), ('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :67| token :comp| action :s73
---------------steps :304---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73
tokens : [('rparen', ')'), ('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :73| token :boolstr| action :s68
---------------steps :305---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73, 'boolstr', 68
tokens : [('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :68| token :rparen| action :r32
---------------steps :306---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73, 'CONDL'
tokens : [('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :73| token :CONDL| action :67
---------------steps :307---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73, 'CONDL', 67
tokens : [('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :67| token :rparen| action :r31
---------------steps :308---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73, 'COND'
tokens : [('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :73| token :COND| action :76
---------------steps :309---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'CONDL', 67, 'comp', 73, 'COND', 76
tokens : [('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :76| token :rparen| action :r30
---------------steps :310---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND'
tokens : [('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :60| token :COND| action :66
---------------steps :311---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66
tokens : [('lbrace', '{'), ('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :66| token :rparen| action :s72
---------------steps :312---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72
tokens : [('id', 'x'), ('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :72| token :lbrace| action :s75
---------------steps :313---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75
tokens : [('assign', '='), ('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :75| token :id| action :s54
---------------steps :314---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54
tokens : [('num', '0'), ('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :54| token :assign| action :s15
---------------steps :315---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15
tokens : [('semi', ';'), ('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :num| action :s29
---------------steps :316---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'num', 29
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :29| token :semi| action :r18
---------------steps :317---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRF'
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRF| action :26
---------------steps :318---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRF', 26
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :319---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT'
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRT| action :25
---------------steps :320---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPRT', 25
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :321---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPR'
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPR| action :21
---------------steps :322---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'EXPR', 21
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :323---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'RHS'
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :RHS| action :20
---------------steps :324---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'id', 54, 'assign', 15, 'RHS', 20
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :20| token :semi| action :r7
---------------steps :325---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'ASSIGN'
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :75| token :ASSIGN| action :50
---------------steps :326---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'ASSIGN', 50
tokens : [('id', 'y'), ('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :50| token :semi| action :s59
---------------steps :327---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'ASSIGN', 50, 'semi', 59
tokens : [('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :59| token :id| action :r27
---------------steps :328---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT'
tokens : [('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :75| token :STMT| action :48
---------------steps :329---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48
tokens : [('assign', '='), ('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :id| action :s54
---------------steps :330---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'id', 54
tokens : [('num', '0'), ('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :54| token :assign| action :s15
---------------steps :331---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'id', 54, 'assign', 15
tokens : [('semi', ';'), ('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :num| action :s29
---------------steps :332---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'id', 54, 'assign', 15, 'num', 29
tokens : [('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :29| token :semi| action :r18
---------------steps :333---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF'
tokens : [('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRF| action :26
---------------steps :334---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRF', 26
tokens : [('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :335---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT'
tokens : [('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPRT| action :25
---------------steps :336---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPRT', 25
tokens : [('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :337---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPR'
tokens : [('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :EXPR| action :21
---------------steps :338---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'id', 54, 'assign', 15, 'EXPR', 21
tokens : [('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :339---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'id', 54, 'assign', 15, 'RHS'
tokens : [('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :15| token :RHS| action :20
---------------steps :340---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'id', 54, 'assign', 15, 'RHS', 20
tokens : [('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :20| token :semi| action :r7
---------------steps :341---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'ASSIGN'
tokens : [('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :ASSIGN| action :50
---------------steps :342---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'ASSIGN', 50
tokens : [('rbrace', '}'), ('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :50| token :semi| action :s59
---------------steps :343---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'ASSIGN', 50, 'semi', 59
tokens : [('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :59| token :rbrace| action :r27
---------------steps :344---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'STMT'
tokens : [('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :STMT| action :48
---------------steps :345---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'STMT', 48
tokens : [('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :rbrace| action :r25
---------------steps :346---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'STMT', 48, 'BLOCK'
tokens : [('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :BLOCK| action :58
---------------steps :347---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'STMT', 48, 'BLOCK', 58
tokens : [('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :58| token :rbrace| action :r24
---------------steps :348---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'BLOCK'
tokens : [('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :BLOCK| action :58
---------------steps :349---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'STMT', 48, 'BLOCK', 58
tokens : [('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :58| token :rbrace| action :r24
---------------steps :350---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK'
tokens : [('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :75| token :BLOCK| action :78
---------------steps :351---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78
tokens : [('return', 'return'), ('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :78| token :rbrace| action :s80
---------------steps :352---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80
tokens : [('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :80| token :return| action :r34
---------------steps :353---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'ELSE'
tokens : [('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :80| token :ELSE| action :82
---------------steps :354---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'if', 51, 'lparen', 60, 'COND', 66, 'rparen', 72, 'lbrace', 75, 'BLOCK', 78, 'rbrace', 80, 'ELSE', 82
tokens : [('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :82| token :return| action :r28
---------------steps :355---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT'
tokens : [('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :41| token :STMT| action :48
---------------steps :356---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48
tokens : [('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :return| action :r25
---------------steps :357---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'BLOCK'
tokens : [('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :48| token :BLOCK| action :58
---------------steps :358---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'STMT', 48, 'BLOCK', 58
tokens : [('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :58| token :return| action :r24
---------------steps :359---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK'
tokens : [('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :41| token :BLOCK| action :47
---------------steps :360---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47
tokens : [('id', 'x'), ('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :47| token :return| action :s57
---------------steps :361---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57
tokens : [('multdiv', '*'), ('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :57| token :id| action :s28
---------------steps :362---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'id', 28
tokens : [('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :28| token :multdiv| action :r17
---------------steps :363---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRF'
tokens : [('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :57| token :EXPRF| action :26
---------------steps :364---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRF', 26
tokens : [('id', 'y'), ('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :26| token :multdiv| action :s36
---------------steps :365---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRF', 26, 'multdiv', 36
tokens : [('semi', ';'), ('rbrace', '}'), ('rbrace', '}')]
## state :36| token :id| action :s28
---------------steps :366---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRF', 26, 'multdiv', 36, 'id', 28
tokens : [('rbrace', '}'), ('rbrace', '}')]
## state :28| token :semi| action :r17
---------------steps :367---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRF', 26, 'multdiv', 36, 'EXPRF'
tokens : [('rbrace', '}'), ('rbrace', '}')]
## state :36| token :EXPRF| action :26
---------------steps :368---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRF', 26, 'multdiv', 36, 'EXPRF', 26
tokens : [('rbrace', '}'), ('rbrace', '}')]
## state :26| token :semi| action :r15
---------------steps :369---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRF', 26, 'multdiv', 36, 'EXPRT'
tokens : [('rbrace', '}'), ('rbrace', '}')]
## state :36| token :EXPRT| action :45
---------------steps :370---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRF', 26, 'multdiv', 36, 'EXPRT', 45
tokens : [('rbrace', '}'), ('rbrace', '}')]
## state :45| token :semi| action :r14
---------------steps :371---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRT'
tokens : [('rbrace', '}'), ('rbrace', '}')]
## state :57| token :EXPRT| action :25
---------------steps :372---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPRT', 25
tokens : [('rbrace', '}'), ('rbrace', '}')]
## state :25| token :semi| action :r13
---------------steps :373---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPR'
tokens : [('rbrace', '}'), ('rbrace', '}')]
## state :57| token :EXPR| action :21
---------------steps :374---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'EXPR', 21
tokens : [('rbrace', '}'), ('rbrace', '}')]
## state :21| token :semi| action :r8
---------------steps :375---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'RHS'
tokens : [('rbrace', '}'), ('rbrace', '}')]
## state :57| token :RHS| action :65
---------------steps :376---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'RHS', 65
tokens : [('rbrace', '}'), ('rbrace', '}')]
## state :65| token :semi| action :s71
---------------steps :377---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'return', 57, 'RHS', 65, 'semi', 71
tokens : [('rbrace', '}')]
## state :71| token :rbrace| action :r35
---------------steps :378---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'RETURN'
tokens : [('rbrace', '}')]
## state :47| token :RETURN| action :56
---------------steps :379---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'RETURN', 56
tokens : [('rbrace', '}')]
## state :56| token :rbrace| action :s64
---------------steps :380---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'vtype', 5, 'id', 10, 'lparen', 14, 'ARG', 18, 'rparen', 33, 'lbrace', 41, 'BLOCK', 47, 'RETURN', 56, 'rbrace', 64
tokens : []
## state :64| token :rbrace| action :r19
---------------steps :381---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'FDECL'
tokens : []
## state :31| token :FDECL| action :32
---------------steps :382---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'FDECL', 32
tokens : []
## state :32| token :rbrace| action :r39
---------------steps :383---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'FDECL', 32, 'ODECL'
tokens : []
## state :32| token :ODECL| action :40
---------------steps :384---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'FDECL', 32, 'ODECL', 40
tokens : []
## state :40| token :rbrace| action :r38
---------------steps :385---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'ODECL'
tokens : []
## state :31| token :ODECL| action :39
---------------steps :386---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'VDECL', 31, 'ODECL', 39
tokens : []
## state :39| token :rbrace| action :r37
---------------steps :387---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'ODECL'
tokens : []
## state :31| token :ODECL| action :39
---------------steps :388---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'VDECL', 31, 'ODECL', 39
tokens : []
## state :39| token :rbrace| action :r37
---------------steps :389---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'ODECL'
tokens : []
## state :17| token :ODECL| action :30
---------------steps :390---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'ODECL', 30
tokens : []
## state :30| token :rbrace| action :s38
---------------steps :391---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'class', 6, 'id', 12, 'lbrace', 17, 'ODECL', 30, 'rbrace', 38
tokens : []
## state :38| token :$| action :r36
---------------steps :392---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'CDECL'
tokens : []
## state :3| token :CDECL| action :4
---------------steps :393---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'CDECL', 4
tokens : []
## state :4| token :$| action :r4
---------------steps :394---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'CDECL', 4, 'CODE'
tokens : []
## state :4| token :CODE| action :9
---------------steps :395---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'CDECL', 4, 'CODE', 9
tokens : []
## state :9| token :$| action :r3
---------------steps :396---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'CODE'
tokens : []
## state :3| token :CODE| action :8
---------------steps :397---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'FDECL', 3, 'CODE', 8
tokens : []
## state :8| token :$| action :r2
---------------steps :398---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'CODE'
tokens : []
## state :3| token :CODE| action :8
---------------steps :399---------------
stack : 0, 'VDECL', 2, 'FDECL', 3, 'CODE', 8
tokens : []
## state :8| token :$| action :r2
---------------steps :400---------------
stack : 0, 'VDECL', 2, 'CODE'
tokens : []
## state :2| token :CODE| action :7
---------------steps :401---------------
stack : 0, 'VDECL', 2, 'CODE', 7
tokens : []
## state :7| token :$| action :r1
---------------steps :402---------------
stack : 0, 'CODE'
tokens : []
## state :0| token :CODE| action :1
---------------steps :403---------------
stack : 0, 'CODE', 1
tokens : []
## state :1| token :$| action :acc
----------------accept!----------------
